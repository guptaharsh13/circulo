version: '3'

services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    command: >
      sh -c "python3 manage.py collectstatic --noinput &&
             python3 manage.py wait_for_db &&
             python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - elastic

  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_DB=circulo
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    volumes: 
      - pgdata:/var/lib/postgresql/data
  redis:
    image: redis:alpine
  celery:
    restart: always
    build:
      context: .
    command: celery -A circulo.celery worker -l INFO
    volumes:
      - .:/app
    environment:
      - POSTGRES_DB=circulo
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    depends_on:
      - db
      - redis
      - app
  celery-beat:
    restart: always
    build:
      context: .
    command: celery -A circulo beat -l INFO
    volumes:
      - .:/app
    environment:
      - POSTGRES_DB=circulo
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    depends_on:
      - db
      - redis
      - app
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.1.1
    ports:
      - 9200:9200
      - 9300:9300
    expose:
      - "9200"
      - "9300"
volumes:
  pgdata: